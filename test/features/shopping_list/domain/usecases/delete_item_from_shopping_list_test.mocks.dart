// Mocks generated by Mockito 5.4.0 from annotations
// in bite_buddy/test/features/shopping_list/domain/usecases/delete_item_from_shopping_list_test.dart.
// Do not manually edit this file.

// ignore_for_file: no_leading_underscores_for_library_prefixes
import 'package:bite_buddy/core/error/failures.dart' as _i4;
import 'package:bite_buddy/core/util/input_converter.dart' as _i3;
import 'package:bite_buddy/features/shopping_list/domain/entities/list_item.dart'
    as _i5;
import 'package:dartz/dartz.dart' as _i2;
import 'package:mockito/mockito.dart' as _i1;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types
// ignore_for_file: subtype_of_sealed_class

class _FakeEither_0<L, R> extends _i1.SmartFake implements _i2.Either<L, R> {
  _FakeEither_0(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

/// A class which mocks [InputConverter].
///
/// See the documentation for Mockito's code generation for more information.
class MockInputConverter extends _i1.Mock implements _i3.InputConverter {
  MockInputConverter() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i2.Either<_i4.Failure, _i5.ListItem> stringToListItem(String? str) =>
      (super.noSuchMethod(
        Invocation.method(
          #stringToListItem,
          [str],
        ),
        returnValue: _FakeEither_0<_i4.Failure, _i5.ListItem>(
          this,
          Invocation.method(
            #stringToListItem,
            [str],
          ),
        ),
      ) as _i2.Either<_i4.Failure, _i5.ListItem>);
}
